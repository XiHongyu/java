package com.polymorphi.test;

public class Test {

	/**
	 * 需求说明
			宠物饿了，主人需要为宠物喂食，使用多态实现该过程
			不同宠物吃的东西不一样
			不同宠物吃完东西后恢复健康值不一样
			健康值达到100时，不需要继续喂食
		分析：
			1：定义宠物类 pet 拥有宠物公共的属性health健康值  公共的方法吃 因为所有宠物都要重写吃方法并且Pet类不需要实例化对象
				所以可将eat方法定义成抽象方法，把Pet类定义为抽象类
			2:定义给宠物类  继承父类并根据需求重写父类的方法
			3：定义主人类  通过主人类 有给动物喂食的方法，将主人类的喂食方法定义为静态可直接类名点调用
		需求说明
			狗具有特有的接飞盘方法，企鹅具有特有的南极游泳方法。请编写测试类分别调用各种具体宠物的特有方法
			使用向下转型
			使用instanceof判断宠物类型
	 */
	public static void main(String[] args) {
		//初始化两个宠物对象并给初始化健康值
		Dog d=new Dog(60);
		Penguin p=new Penguin(100);
		//调用主人的喂食方法为宠物喂食
		Master.feed(d);
		Master.feed(p);
		
	}
}
